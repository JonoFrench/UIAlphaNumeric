// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name UISprites
import Swift
import UIKit
@_exported import UISprites
public let deadColors: [UIKit.UIColor]
public protocol Animates {
  var frames: Swift.Int { get set }
  mutating func animate()
}
open class UISprite {
  public var viewArray: [UIKit.UIView]
  public var spriteView: UIKit.UIView?
  public var pixWidth: Swift.Int
  public var pixHeight: Swift.Int
  public var frames: Swift.Int
  public var currentFrame: Swift.Int
  public var isDead: Swift.Bool
  public var isDying: Swift.Bool
  public var stopAnimating: Swift.Bool
  public init(pos: CoreGraphics.CGPoint, height: Swift.Int, width: Swift.Int, animateArray: [[UIKit.UIColor]], frameWith: Swift.Int, frameHeight: Swift.Int, frames: Swift.Int, speed: Swift.Double = 0.1)
  public init(pos: CoreGraphics.CGPoint, height: Swift.Int, width: Swift.Int, coloursArray: [UIKit.UIColor], frameWith: Swift.Int, frameHeight: Swift.Int)
  public var position: CoreGraphics.CGPoint {
    get
    set
  }
  open func checkHit(pos: CoreGraphics.CGPoint) -> Swift.Bool
  open func checkHit(pos: CoreGraphics.CGRect) -> Swift.Bool
  public func move(x: Swift.Int, y: Swift.Int)
  @objc deinit
}
extension UISprite {
  public func startAnimating()
}
extension UISprite {
  public func startAnimatingNow()
}
extension UISprite {
  open func animate()
  public func reDraw(coloursArray: [UIKit.UIColor])
  public func reDrawView(coloursArray: [UIKit.UIColor]) -> UIKit.UIView
  public func rotateMe()
  public func rotateMeTo(angle: CoreGraphics.CGFloat, duration: Swift.Double)
}
